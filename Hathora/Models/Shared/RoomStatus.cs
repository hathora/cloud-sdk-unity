
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Hathora.Models.Shared
{
    using Newtonsoft.Json;
    using System;
    using UnityEngine;
    
    
    /// <summary>
    /// The allocation status of a room.
    /// 
    /// <remarks>
    /// 
    /// `scheduling`: a process is not allocated yet and the room is waiting to be scheduled
    /// 
    /// `active`: ready to accept connections
    /// 
    /// `suspended`: room is unallocated from the process but can be rescheduled later with the same `roomId`
    /// 
    /// `destroyed`: all associated metadata is deleted
    /// </remarks>
    /// </summary>
    public enum RoomStatus
    {
    	[JsonProperty("scheduling")]
		Scheduling,
		[JsonProperty("active")]
		Active,
		[JsonProperty("suspended")]
		Suspended,
		[JsonProperty("destroyed")]
		Destroyed,
    }
    
    public static class RoomStatusExtension
    {
        public static string Value(this RoomStatus value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static RoomStatus ToEnum(this string value)
        {
            foreach(var field in typeof(RoomStatus).GetFields())
            {
                var attribute = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    return (RoomStatus)field.GetValue(null);
                }
            }

            throw new Exception($"Unknown value {value} for enum RoomStatus");
        }
    }
    
}